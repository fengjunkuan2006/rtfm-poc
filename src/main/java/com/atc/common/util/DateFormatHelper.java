package com.atc.common.util;/** * Created by Vic.Feng on 15/12/2015. */import java.text.DateFormat;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.Date;import java.util.TimeZone;/** * This class provides methods to format a date for display on a web page. * * @author Alan Ewald * @created Mar 26, 2010 * @copyright Copyright (c) 2010 American Tower Corporation, All Rights Reserved. */public class DateFormatHelper {    /**     * Description of the Field     */    public final static String MONTH_NUMERIC_FORMAT = "MM";    /**     * Description of the Field     */    public final static String LONG_MONTH_TEXT_FORMAT = "MMMM";    /**     * Description of the Field     */    public final static String SHORT_MONTH_TEXT_FORMAT = "MMM";    /**     * Description of the Field     */    public final static String LONG_YEAR_NUMERIC_FORMAT = "yyyy";    /**     * Description of the Field     */    public final static String SHORT_YEAR_NUMERIC_FORMAT = "yy";    /**     * Description of the Field     */    public final static String DAY_OF_MONTH_NUMERIC_FORMAT = "dd";    /**     * Description of the Field     */    public final static String DAY_SHORT_NUMERIC_FORMAT = "d";    /**     * Description of the Field     */    public final static String SHORT_DAY_OF_MONTH_NUMERIC_FORMAT = "d";    /**     * Description of the Field     */    public final static String WEEKDAY_LONG_TEXT_FORMAT = "EEEE";    public final static String WEEKDAY_SHORT_TEXT_FORMAT = "EEE";    /**     * Description of the Field     */    public final static String SHORT_TIME_FORMAT = "h:mm a";    /**     * Description of the Field     */    public final static String LONG_TIME_FORMAT = "hh:mm a";    public final static String STANDARD_DATE_TIME_FORMAT = "MM/dd/yy hh:mm a";    public final static String STANDARD_DATE_FORMAT = "MM/dd/yyyy";    public final static String FILE_NAME_SUFFIX_FORMAT = "MMddyy";    public final static String FILE_NAME_SUFFIX_ALT_FORMAT = "yyyy-MM-dd";    private final static String[] shortMonthNames = new String[]{"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"};    /**     * Gets a data format for a pattern and timezone     *     * @param pattern  The pattern string     * @param timezone     * @return A DateFormat for the pattern, with time zone set to     * timezone     * @see SimpleDateFormat     */    public static DateFormat getDateFormat(String pattern, TimeZone timezone) {        SimpleDateFormat df = new SimpleDateFormat(pattern);        df.setTimeZone(timezone);        return df;    }    /**     * Gets a date from a set of URL params     *     * @param yearParam  The 4-digit year number     * @param monthParam Two-digit month number     * @param dayParam   Day of month number     * @param timeZone   Time zone     * @return A Date based on the 3 numbers and the timezone.     * Defaults to the current date if the string is unparseable.     */    public static Date getDateFromParams(String yearParam, String monthParam, String dayParam, TimeZone timeZone) throws ParseException {        String pattern = "MM/dd/yyyy";        return getDate(monthParam + "/" + dayParam + "/" + yearParam, pattern, timeZone);    }    public static Date getDate(String dateString, String pattern, TimeZone timeZone) throws ParseException {        if (pattern == null) pattern = "MM/dd/yyyy";        SimpleDateFormat df = new SimpleDateFormat(pattern);        df.setLenient(false);        df.setTimeZone(timeZone);        return df.parse(dateString);    }    public static Date getDate(String dateString, String pattern, String tzName) throws ParseException {        return getDate(dateString, pattern, TimeZone.getTimeZone(tzName));    }    public static Date getDate(String dateString) {        try {            return getDate(dateString, STANDARD_DATE_FORMAT, TimeZone.getDefault());        } catch (ParseException pe) {            // Suppress        }        return null;    }    /**     * Returns a formatted string according the given pattern and timezone.     *     * @param date     * @param pattern     * @param tz     * @return     */    public static String getDateString(Date date, String pattern, TimeZone tz) {        if (date == null) {            return "";        }        SimpleDateFormat df = new SimpleDateFormat(pattern);        df.setTimeZone(tz);        return df.format(date);    }    public static String getDateString(Date date, String pattern, String tzName) {        return getDateString(date, pattern, TimeZone.getTimeZone(tzName));    }    public static String getDateString(Date date) {        if (date == null) {            return "";        }        return getDateString(date, STANDARD_DATE_FORMAT, TimeZone.getDefault());    }    public static String getDateString(Date date, String pattern) {        if (date == null) {            return "";        }        return getDateString(date, pattern, TimeZone.getDefault());    }    public static String getDateString(String dateString) {        if (dateString == null) {            return "";        }        Date date = getDate(dateString);        return getDateString(date, STANDARD_DATE_FORMAT, TimeZone.getDefault());    }    /**     * Gets the current year as a string (LONG_YEAR_NUMERIC_FORMAT)     *     * @param tz User's time zone     * @return The currentYearString value     */    public static String getCurrentYearString(TimeZone tz) {        return getDateFormat(LONG_YEAR_NUMERIC_FORMAT, tz).format(new Date());    }    public static String getShortMonthName(int i) {        return shortMonthNames[i];    }    public static String getCurrentDateString(String tzName) {        TimeZone tz = TimeZone.getTimeZone(tzName);        return getDateFormat("EEEEEE, MMMM d, yyyy", tz).format(new Date());    }}