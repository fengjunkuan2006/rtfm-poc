package com.atc.common.util;import com.atc.common.constant.SystemConstants;import org.springframework.stereotype.Repository;import org.springframework.web.servlet.ModelAndView;import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.PrintWriter;/** * Created by Vic.Feng on 01/12/2015. */@Repositorypublic class LoggedInterceptor extends HandlerInterceptorAdapter {    /**     * Interceptor Which Is Used to Check User's Status     *     * @param request   Http Servlet Request     * @param response  Http Servlet Response     * @param handler   Object     * @return false: if user hasn't logged in     * @throws Exception     */    @Override    public boolean preHandle(HttpServletRequest request,                             HttpServletResponse response, Object handler) throws Exception {        // The URLs that will not be filtered        String[] noFilters = new String[]{};        String uri = request.getRequestURI();        boolean beFilter = true;        for (String s : noFilters) {            if (uri.indexOf(s) != -1) {                beFilter = false;                break;            }        }        if (beFilter) {            Object obj = request.getSession().getAttribute(SystemConstants.LOGGED_USER);            if (null == obj) {                // Not login                PrintWriter out = response.getWriter();                StringBuilder builder = new StringBuilder();                builder.append("<script type='text/javascript'>");                builder.append("window.top.location.href='");                builder.append(SystemConstants.HOME_PATH);                builder.append("';</script>");                out.print(builder.toString());                out.close();                return false;            }        }        return super.preHandle(request, response, handler);    }    /**     * Perform before Generate View     */    @Override    public void postHandle(HttpServletRequest request,                           HttpServletResponse response, Object handler,                           ModelAndView modelAndView) throws Exception {    }    /**     * Perform Finally to Release Resources     */    @Override    public void afterCompletion(HttpServletRequest request,                                HttpServletResponse response, Object handler, Exception ex)            throws Exception {    }}