// Pull the plugin from a Maven Repo
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.eriwen:gradle-js-plugin:1.11.0'
        classpath 'com.eriwen:gradle-css-plugin:1.11.0'
    }
}

plugins {
    id 'org.hidetake.ssh' version '1.1.4'
}

group 'CustomerPortal'

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'

sourceCompatibility = 1.5

repositories {
    mavenCentral()
}

dependencies {
    compile(
            //Spring
            "org.springframework:spring-core:4.1.6.RELEASE",
            "org.springframework:spring-web:4.1.6.RELEASE",
            "org.springframework:spring-tx:4.1.6.RELEASE",
            "org.springframework:spring-webmvc:4.1.6.RELEASE",
            "org.springframework:spring-aop:4.1.6.RELEASE",
            "org.springframework:spring-context-support:4.1.6.RELEASE",
            "org.springframework:spring-beans:4.1.6.RELEASE",
            "org.springframework:spring-test:4.1.6.RELEASE",

            //Logback
            "ch.qos.logback:logback-classic:1.1.3",
            "org.logback-extensions:logback-ext-spring:0.1.2",

            //Jackson
            "com.fasterxml.jackson.core:jackson-core:2.1.0",
            "com.fasterxml.jackson.core:jackson-databind:2.1.0",
            "com.fasterxml.jackson.core:jackson-annotations:2.1.0",

            //Servlet
            "javax.servlet:javax.servlet-api:3.0.1",

            //Spring Data Mongodb
            "org.springframework.data:spring-data-mongodb:1.8.1.RELEASE",

            //Spring Session
            "org.springframework.session:spring-session-data-redis:1.0.2.RELEASE",

            //Test
            "junit:junit:4.11",

            //Common
            "org.apache.commons:commons-lang3:3.2.1",

            //Cache
            "org.infinispan:infinispan-core:6.0.2.Final",

            //kml
            "de.micromata.jak:JavaAPIforKml:2.2.0",

            //Apache POI
            "org.apache.poi:poi:3.9",
            "org.apache.poi:poi-ooxml:3.9",

            //Apache net
            'commons-net:commons-net:3.3',

            //OpenCSV
            "au.com.bytecode:opencsv:2.4",

            //JSF
            "javax.faces:jsf-api:2.1",

            //Mybatis
            "org.mybatis:mybatis:3.2.8",
            "org.mybatis:mybatis-spring:1.2.2",

            //MySQL
            "mysql:mysql-connector-java:5.1.36",

            //JDBC
            "org.springframework:spring-jdbc:4.1.6.RELEASE",

            //File Upload
            "commons-fileupload:commons-fileupload:1.3.1",

            //LDAP
            "com.novell.ldap:jldap:4.3",

            //Hibernate
            "org.hibernate:hibernate-entitymanager:4.3.11.Final",
            "org.hibernate:hibernate-core:4.3.11.Final",
            "org.springframework:spring-orm:4.1.6.RELEASE",
    )

    runtime("jstl:jstl:1.2")
}

// Copy jars
task copyJars(type: Copy) {
    from configurations.runtime
    into 'lib' // Target Location
}

// Test
test {
    include '**/*Test.class'
}

// Robot Test
/*task runRobotTest(type:Exec) {
  //on windows:
  commandLine 'cmd', '', 'pybot -d ./output robot_test.txt'
  
  //store the output instead of printing to the console:
  standardOutput = new ByteArrayOutputStream()
 
  //extension method stopTomcat.output() can be used to obtain the output:
  ext.output = {
    return standardOutput.toString()
  }
}
*/
// Declare root & destination dir
ext {
    baseDir = '/src/main/webapp/staticmedia'
    destDir = baseDir + '/compressed'
}

// Include other gradle files
apply from: 'gradle/build-js.gradle'
apply from: 'gradle/build-css.gradle'
apply from: 'gradle/build-server.gradle'
